const mammoth = require("mammoth");
const { parseHTML } = require("./parseHtml");
const xmlbuilder = require("./xmlbuilder");

const PATHS = {
  0: "Ｍ639528用於水下基礎的定位系統.docx",
  1: "Ｍ639544梳子結構.docx",
  2: "Ｍ639556太陽能模組.docx",
  3: "Ｍ639563分向閥結構.docx",
  4: "M639569分離式保溫集水盒.docx",

  5: "發明(紙本申請版)/Ｍ639291信用卡多幣別付款系統.docx",
  6: "發明(紙本申請版)/Ｍ639303防晶化之藥物保溫裝置.docx",
  7: "發明(紙本申請版)/Ｍ639344擺放架.docx",
  8: "發明(紙本申請版)/Ｍ639423滑鼠.docx",
  9: "發明(紙本申請版)/Ｍ639445機車全包式後扶手.docx",
  10: "發明(紙本申請版)/Ｍ639528用於水下基礎的定位系統.docx",
  11: "發明(紙本申請版)/Ｍ639544梳子結構.docx",
  12: "發明(紙本申請版)/Ｍ639556太陽能模組.docx",
  13: "發明(紙本申請版)/Ｍ639563分向閥結構.docx",
  14: "發明(紙本申請版)/M639569分離式保溫集水盒.docx",

  15: "發明(電子申請版)/Ｍ639291信用卡多幣別付款系統.docx",
  16: "發明(電子申請版)/Ｍ639303防晶化之藥物保溫裝置.docx",
  17: "發明(電子申請版)/Ｍ639344擺放架.docx",
  18: "發明(電子申請版)/Ｍ639423滑鼠.docx",
  19: "發明(電子申請版)/Ｍ639445機車全包式後扶手.docx",
  20: "發明(電子申請版)/Ｍ639528用於水下基礎的定位系統.docx",
  21: "發明(電子申請版)/Ｍ639544梳子結構.docx",
  22: "發明(電子申請版)/Ｍ639556太陽能模組.docx",
  23: "發明(電子申請版)/Ｍ639563分向閥結構.docx",
  24: "發明(電子申請版)/M639569分離式保溫集水盒.docx",

  25: "新型(紙本申請版)/Ｍ639291信用卡多幣別付款系統.docx",
  26: "新型(紙本申請版)/Ｍ639303防晶化之藥物保溫裝置.docx",
  27: "新型(紙本申請版)/Ｍ639344擺放架.docx",
  28: "新型(紙本申請版)/Ｍ639423滑鼠.docx",
  29: "新型(紙本申請版)/Ｍ639445機車全包式後扶手.docx",
  30: "新型(紙本申請版)/Ｍ639528用於水下基礎的定位系統.docx",
  31: "新型(紙本申請版)/Ｍ639544梳子結構.docx",
  32: "新型(紙本申請版)/Ｍ639556太陽能模組.docx",
  33: "新型(紙本申請版)/Ｍ639563分向閥結構.docx",
  34: "新型(紙本申請版)/M639569分離式保溫集水盒.docx",

  35: "新型(電子申請版)/Ｍ639291信用卡多幣別付款系統.docx",
  36: "新型(電子申請版)/Ｍ639303防晶化之藥物保溫裝置.docx",
  37: "新型(電子申請版)/Ｍ639344擺放架.docx",
  38: "新型(電子申請版)/Ｍ639423滑鼠.docx",
  39: "新型(電子申請版)/Ｍ639445機車全包式後扶手.docx",
  40: "新型(電子申請版)/Ｍ639528用於水下基礎的定位系統.docx",
  41: "新型(電子申請版)/Ｍ639544梳子結構.docx",
  42: "新型(電子申請版)/Ｍ639556太陽能模組.docx",
  43: "新型(電子申請版)/Ｍ639563分向閥結構.docx",
  44: "新型(電子申請版)/M639569分離式保溫集水盒.docx",
};

mammoth
  .convertToHtml(
    { path: `./assets/${PATHS[5]}` },
    {
      convertImage: mammoth.images.imgElement(function (image) {
        return image.read("base64").then(function (imageBuffer) {
          return {
            src: "data:" + image.contentType,
          };
        });
      }),
    }
  )
  .then(function (result) {
    const html = result.value; // The generated HTML
    console.log(html);
    const data = parseHTML(html);
    console.log(data);
    xmlbuilder(data);
  })
  .catch(function (error) {
    console.error(error);
  });
